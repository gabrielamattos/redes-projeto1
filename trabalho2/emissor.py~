# -*- coding: utf-8 -*-
# Referencias: http://www.cs.sfu.ca/CourseCentral/371/oba2/Sep19.pdf
#http://www.binarytides.com/programming-udp-sockets-in-python/
from socket import *
import sys
import math
import numpy


# A mensagem será dividida no tamanho da janela e salva em um vetor de string, o indice do vetor vai representar

def dividirMensagem(tamanhoJanela, mensagem):

	pacotes = []
	tamanho = int(math.ceil(len(mensagem) / (tamanhoJanela * 1.0)))

	for i in range (0, tamanho):
		inicio = i * tamanhoJanela
		fim = inicio + tamanhoJanela
		pacotes.append(mensagem[inicio:fim])

	return pacotes

def main():
	tamanhoJanela = 10
	numSeqMax = tamanhoJanela - 1
	tamanhoPacote = 5

	if(len(sys.argv)>1):
		numPort = int(sys.argv[1])
		print numPort
		servidorSocket = socket(AF_INET, SOCK_DGRAM)
		servidorSocket.bind(('', numPort))
		print "O servidor está pronto para receber."

	
		while 1:
			mensagem, enderecoReceptor = servidorSocket.recvfrom(2048)
		
			if (len(mensagem) != 0):
				
				numSeqBase = 0
				numSeq = 0
				ultimoAck = 0
				pacotes = dividirMensagem(tamanhoPacote, mensagem)
				numSeqMax = tamanhoJanela - 1

				#pacote é transmitido em ordem
				for i in range (0, len(pacotes)):
		
					if (numSeq <= numSeqMax):
					
		
						res = numSeq + ";" + i + ";"
						# [melhorar depois] mensagem avisando que foi enviado o pacote
						print "Enviando pacote de dados com cabecalho: " + res				    
				        	servidorSocket.sendto(res, enderecoReceptor)
						numSeq += 1
					#quando atinge o tamanho da janela ele deve reenviar os pacotes
					else:
						i = ack + 1
						numSeq = i
	
					mensagem, enderecoReceptor = servidorSocket.recvfrom(2048)

					if (len(mensagem) != 0):
						if (ack > numeroSeq):
							numSeqMax = numSeqMax + (ack - numSeqBase)
							numSeqBase = ack
							ultimoAck = ack
						#duvida: aqui é um tempo ou posso verificar o ultimo?
						#elif (ack == ultimoAck): #é nesse momento que vamos saber se houve perca, pq o mesmo ack tá sendo enviado mais de uma vez
						
		else:
			print "Espera-se o seguinte parametro: numero de porta do serviço"

main()
